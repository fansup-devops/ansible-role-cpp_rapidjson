---
- name: Ensure rapidjson's dependencies are installed (Debian).
  apt: "pkg={{ item }} state=installed"
  with_items:
    - gcc
    - make
    - libc6-dev
    - g++
    - cmake
  when: ansible_os_family == 'Debian'

- name: Get installed version
  shell: "test -e {{ cpp_rapidjson_install_path }}/include/rapidjson/rapidjson.h && (cat {{ cpp_rapidjson_install_path }}/include/rapidjson/rapidjson.h | grep -E '^#define RAPIDJSON_.*_VERSION ' | sed -n '1,3p' | awk '{print $3}' | xargs echo | sed 's! !.!g')"
  changed_when: false
  failed_when: false
  register: rapidjson_installed_version

- name: Force rapidjson install if the version numbers do not match
  set_fact:
    cpp_rapidjson_reinstall_from_source: true
  when: 'cpp_rapidjson_install_from_source_force_update and (rapidjson_installed_version|success and (rapidjson_installed_version.stdout | regex_replace("^.*?([0-9\.]+)$", "\\1") | version_compare(cpp_rapidjson_version, operator="!=")))'

- name: Download rapidjson.
  get_url:
    url: "https://github.com/miloyip/rapidjson/archive/{{ cpp_rapidjson_github_branch }}.tar.gz"
    dest: "{{ workspace }}/rapidjson-{{ cpp_rapidjson_github_archive }}.tar.gz"
  when: rapidjson_installed_version|failed or cpp_rapidjson_reinstall_from_source

- name: Expand rapidjson archive.
  unarchive:
    src: "{{ workspace }}/rapidjson-{{ cpp_rapidjson_github_archive }}.tar.gz"
    dest: "{{ workspace }}"
    creates: "{{ workspace }}/rapidjson-{{ cpp_rapidjson_github_archive }}/README.md"
    copy: no
  when: rapidjson_installed_version|failed or cpp_rapidjson_reinstall_from_source

- name: Mkdir build directory.
  file:
    path: "{{ workspace }}/rapidjson-{{ cpp_rapidjson_github_archive }}/build"
    state: directory
    owner: "root"
    group: "root"
    mode: 0750
  when: rapidjson_installed_version|failed or cpp_rapidjson_reinstall_from_source

- name: Build rapidjson with cmake.
  command: >
    cmake -DCMAKE_INSTALL_PREFIX={{ cpp_rapidjson_install_path }} ..
    chdir={{ workspace }}/rapidjson-{{ cpp_rapidjson_github_archive }}/build
  when: rapidjson_installed_version|failed or cpp_rapidjson_reinstall_from_source
  become: yes

- name: Build rapidjson.
  command: >
    make {{ item }}
    chdir={{ workspace }}/rapidjson-{{ cpp_rapidjson_github_archive }}/build
  with_items:
    - all
    - install
  when: rapidjson_installed_version|failed or cpp_rapidjson_reinstall_from_source
  become: yes

- name: Run ldconfig
  shell: ldconfig
  when: rapidjson_installed_version|failed or cpp_rapidjson_reinstall_from_source
  become: yes
